#include <stdio.h>
#include <stdlib.h>
#include <string.h>


void input_handle(char c [],char *pars[])
{
   int num_of_words;
   fgets(c,100,stdin); // read line
   remove_endOfText(c); // remove \n from the end of input line

   if(strcmp("exit",c) == 0) // check if user  input exit to close terminal
            exit(0);
   num_of_words = parsing(c,pars);
   printf("num of words in command is %d\n",num_of_words);
   int i = 0;
   if(i)
    printf("command after parsing is :\n");
   while(i<num_of_words)
   {
       printf("%s\n",pars[i]);
       i++;
   }
}

void remove_endOfText(char line [])
{
    int i = 0 ;
    if(line[0]=='\n') // check if user entered empty line
        {
            printf("no command entered!\n");
            line[0]='\0';
        }

    else
    {
      while(1)
      {
          if (line[i]!='\n')
            i++;
          else
            break;
      }
      line[i]='\0';
    }
}

int parsing(char line[],char *pars[])
{
    if(line[0]=='\0')
        return 0;
   int j=0;
   char *p = strtok(line," =");
   while(p!=NULL)
   {
       pars[j]=p;
       p=strtok(NULL," =");
       j++;
   }
    return j;
}


void print_rooe()
{
    printf("@Nassar:>");
}


int main()
{
    char *pars[50];
    char  c[100]; // list of char where we store user input == command line
    while(1)
    {
        print_rooe();
        input_handle(c,pars); // handle user input (take it and remove \n from the end of it)

        //free(pars);
 //      free(c);

    }


 return 0;
^}
